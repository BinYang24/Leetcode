一个机器人位于一个 m x n 网格的左上角 （起始点在下图中标记为“Start” ）。

机器人每次只能向下或者向右移动一步。机器人试图达到网格的右下角（在下图中标记为“Finish”）。

现在考虑网格中有障碍物。那么从左上角到右下角将会有多少条不同的路径？

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/unique-paths-ii
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

这里用动态规划。
思路很简单，维护一个二维数组，dp[][] = 0
dp[i][j]表示有多少条路能够通往i,j这个位置

初始化的时候，我们只需要初始化第一行和第一列就可以了，其他地方的值我们可以通过动态规划得到

比如dp[1][1] 有多少路能通往这个地方呢？
dp[1][1] = dp[0][1] + dp[1][0] 很显然这么算就行了


