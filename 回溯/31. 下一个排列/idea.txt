实现获取 下一个排列 的函数，算法需要将给定数字序列重新排列成字典序中下一个更大的排列。

如果不存在下一个更大的排列，则将数字重新排列成最小的排列（即升序排列）。

必须 原地 修改，只允许使用额外常数空间。

 

示例 1：

输入：nums = [1,2,3]
输出：[1,3,2]


来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/next-permutation
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

这题不是回溯题，但是是排列题

观察题目 
1，2，3，4，5，6，2，5，6
这个题目要获得下一个更大的排列，那就是要把一个大的数提到前面来，同时前面不变的越长越好
就像给我们一个数12345464，你想把这个数变得更大但变大的幅度又最小，那么只能更改后面的数比较好

我们更改的原则的，一个序列，如果越大的数在的位置越靠前，这个序列就是越大的

5， 4， 3， 2， 1
完美满足了我们的要求，所以这个是最大的，从后往前全是升序
我们需要从最后往前，寻找第一个降序

5， 4， 2， 3， 1
我们发现，3，2是降序，很明显3，2换个位置这个序列会变大
5, 4, 3 , 2, 1
但这个不是我们要的答案
我们还需要把2，1这个序列变到最小
5，4，3，1，2 这才是下一个序列

就像231这个数 ，下一个数是多少？是312 而不是321
同时 交换的时候还要注意
1，2，3，4，8，7，6，5，3
这边第一个降序是8，4 但不是8，4交换，因为要找下一个排列，所以肯定是4和后面的5交换，和6，7，8交换都不是下一个，和3交换反而变小了
将4和5交换，然后将5后面的所有数改为升序，才是最终答案
